{"version":3,"sources":["services/newQuery.js","App.js","index.js"],"names":["searchQuery","info","a","axios","get","response","data","App","useState","query","setQuery","searchResults","setSearchResults","useEffect","newQuery","fetchData","search","e","target","value","className","type","onChange","map","r","key","imdbID","Title","Year","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAUe,GAAEA,YAPA,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sEAEKC,IAAMC,IAAN,UAJT,UAIS,YAAwBH,IAF7B,cAEZI,EAFY,yBAIXA,EAASC,MAJE,2CAAH,uD,MC4FFC,MA1Ff,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAA4CJ,mBAAS,IAArD,6BAGAK,qBAAU,WAAM,4CACd,4BAAAX,EAAA,sEACyBY,EAASd,YAAYS,GAD9C,OACQJ,EADR,OAEEO,EAAiBP,GAFnB,4CADc,sBAMD,KAAVI,GANY,WAAD,wBAOZM,KAGD,CAACN,IAGJ,IAAMO,EAAS,SAACC,GACdP,EAASO,EAAEC,OAAOC,QAiBpB,OAAIR,EAEA,yBAAKS,UAAU,QACb,4CAIA,yBAAKA,UAAU,QACb,0CACA,8BACE,2BAAOC,KAAK,OAAOF,MAAOV,EAAOa,SAAUN,MAI/C,yBAAKI,UAAU,QACb,2CAAiBX,EAAjB,KACA,4BACGE,EAAcY,KAAI,SAAAC,GAAC,OAClB,wBAAIC,IAAKD,EAAEE,QACRF,EAAEG,MADL,KACcH,EAAEI,KADhB,IAEE,4BAAQP,KAAK,UAAb,mBAUV,yBAAKD,UAAU,QACb,4CAIA,yBAAKA,UAAU,QACb,0CACA,8BACE,2BAAOC,KAAK,OAAOF,MAAOV,EAAOa,SAAUN,MAI/C,yBAAKI,UAAU,QACb,2CAAiBX,EAAjB,QClFVoB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.63c11b1c.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/search'\n\nconst searchQuery = async info => {\n\n  const response = await axios.get(`${baseUrl}/${info}`)\n\n  return response.data\n}\n\nexport default { searchQuery }","import React, { useState, useEffect } from 'react'\nimport newQuery from './services/newQuery'\nimport './styles.css'\n\n\nfunction App() {\n  // State Variables\n  const [query, setQuery] = useState('')\n  const [searchResults, setSearchResults] = useState([])\n  const [nominationList, setNominationList] = useState([])\n\n  // Fetch movie results with useEffect hook\n  useEffect(() => {\n    async function fetchData() {\n      const response = await newQuery.searchQuery(query)\n      setSearchResults(response)\n    }\n\n    if(query !== ''){\n      fetchData()\n    }\n\n  }, [query])\n\n  // Event Handler for search\n  const search = (e) => {\n    setQuery(e.target.value)\n  }\n\n  // Event Handler for Nominate button\n  const nominate = () => {\n    // do something\n    // pass the movie object as a parameter into the function\n    // then push the movie into the nominationList array\n    // render this array\n    // how to toggle the disabled attribute\n    // disabled={INSERT result of state function}\n    // the function should return true or false\n    // we need to check the search array against the nomination array\n    // array.includes returns a boolean value could possibly use this\n  }\n\n  // Conditionally render when search results are available\n  if (searchResults){\n    return (\n      <div className=\"flex\">\n        <h1>\n          The Shoppies\n        </h1>\n\n        <div className=\"card\">\n          <p>Movie Title</p>\n          <form>\n            <input type=\"text\" value={query} onChange={search}></input>\n          </form>\n        </div>\n\n        <div className=\"card\">\n          <p>Results for \"{query}\"</p>\n          <ul>\n            {searchResults.map(r =>\n              <li key={r.imdbID}>\n                {r.Title} ({r.Year}) \n                <button type=\"button\">Nominate</button>\n              </li>\n            )}\n          </ul>\n        </div>\n\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"flex\">\n        <h1>\n          The Shoppies\n      </h1>\n\n        <div className=\"card\">\n          <p>Movie Title</p>\n          <form>\n            <input type=\"text\" value={query} onChange={search}></input>\n          </form>\n        </div>\n\n        <div className=\"card\">\n          <p>Results for \"{query}\"</p>\n        </div>\n\n      </div>\n    )\n  }\n  \n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}