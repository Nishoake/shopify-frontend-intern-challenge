{"version":3,"sources":["services/newQuery.js","App.js","index.js"],"names":["searchQuery","info","a","axios","get","response","data","App","useState","query","setQuery","searchResults","setSearchResults","nominationList","setNominationList","useEffect","newQuery","fetchData","search","e","target","value","className","type","onChange","map","r","key","imdbID","Title","Year","disabled","movie","some","nominee","onClick","shortList","push","nominateMovie","n","filter","removeMovie","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAUe,GAAEA,YAPA,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sEAEKC,IAAMC,IAAN,UAJT,UAIS,YAAwBH,IAF7B,cAEZI,EAFY,yBAIXA,EAASC,MAJE,2CAAH,uD,MC2HFC,MAzHf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAA4CJ,mBAAS,IAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KAGAC,qBAAU,WAAM,4CACd,4BAAAb,EAAA,sEACyBc,EAAShB,YAAYS,GAD9C,OACQJ,EADR,OAEEO,EAAiBP,GAFnB,4CADc,sBAMD,KAAVI,GANY,WAAD,wBAOZQ,KAGD,CAACR,EAAOI,IAGX,IAAMK,EAAS,SAACC,GACdT,EAASS,EAAEC,OAAOC,QAwBpB,OAAIV,EAEA,yBAAKW,UAAU,QACb,4CAIA,yBAAKA,UAAU,QACb,0CACA,8BACE,2BAAOC,KAAK,OAAOF,MAAOZ,EAAOe,SAAUN,MAI/C,yBAAKI,UAAU,QACb,2CAAiBb,EAAjB,KACA,4BACGE,EAAcc,KAAI,SAAAC,GAAC,OAClB,wBAAIC,IAAKD,EAAEE,QACRF,EAAEG,MADL,KACcH,EAAEI,KADhB,IAEE,4BACEP,KAAK,SAELQ,UA9BOC,EA8BiBN,EA7BvBb,EAAeoB,MAAK,SAAAC,GAAO,OAAIA,EAAQN,SAAWI,EAAMJ,WA8BzDO,QAAS,kBA5CH,SAACD,GACrB,IAAME,EAAS,YAAOvB,GACtBuB,EAAUC,KAAKH,GACfpB,EAAkBsB,GAyCWE,CAAcZ,KAJ/B,aA3BQ,IAACM,OAwCjB,yBAAKV,UAAU,QACb,6CACA,4BACGT,EAAeY,KAAI,SAAAc,GAAC,OACnB,wBAAIZ,IAAKY,EAAEX,QACRW,EAAEV,MADL,KACcU,EAAET,KADhB,IAEE,4BACEP,KAAK,SACLY,QAAS,kBAtDL,SAACD,GACnB,IAAME,EAAYvB,EAAe2B,QAAO,SAAAR,GAAK,OAAIA,EAAMJ,SAAWM,EAAQN,UAC1Ed,EAAkBsB,GAoDWK,CAAYF,KAF7B,iBAeV,yBAAKjB,UAAU,QACb,4CAIA,yBAAKA,UAAU,QACb,0CACA,8BACE,2BAAOC,KAAK,OAAOF,MAAOZ,EAAOe,SAAUN,MAI/C,yBAAKI,UAAU,QACb,2CAAiBb,EAAjB,QCjHViC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.acc1631a.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/search'\n\nconst searchQuery = async info => {\n\n  const response = await axios.get(`${baseUrl}/${info}`)\n\n  return response.data\n}\n\nexport default { searchQuery }","import React, { useState, useEffect } from 'react'\nimport newQuery from './services/newQuery'\nimport './styles.css'\n\n\nfunction App() {\n  // State Variables\n  const [query, setQuery] = useState('')\n  const [searchResults, setSearchResults] = useState([])\n  const [nominationList, setNominationList] = useState([])\n\n  // Fetch movie results with useEffect hook\n  useEffect(() => {\n    async function fetchData() {\n      const response = await newQuery.searchQuery(query)\n      setSearchResults(response)\n    }\n\n    if(query !== ''){\n      fetchData()\n    }\n\n  }, [query, nominationList])\n\n  // Event Handler for search\n  const search = (e) => {\n    setQuery(e.target.value)\n  }\n\n  // Event Handler for Nominate button\n  const nominateMovie = (nominee) => {\n    const shortList = [...nominationList]\n    shortList.push(nominee)\n    setNominationList(shortList)\n  }\n\n  // Event Handler for Nominate button\n  const removeMovie = (nominee) => {\n    const shortList = nominationList.filter(movie => movie.imdbID !== nominee.imdbID)\n    setNominationList(shortList)\n  }\n\n  // Event Handler for rendering disabled button\n  const disableButton = (movie) => {\n    const result = nominationList.some(nominee => nominee.imdbID === movie.imdbID)\n    return result\n\n  }\n\n  // Conditionally render when search results are available\n  if (searchResults){\n    return (\n      <div className=\"flex\">\n        <h1>\n          The Shoppies\n        </h1>\n\n        <div className=\"card\">\n          <p>Movie Title</p>\n          <form>\n            <input type=\"text\" value={query} onChange={search}></input>\n          </form>\n        </div>\n\n        <div className=\"card\">\n          <p>Results for \"{query}\"</p>\n          <ul>\n            {searchResults.map(r =>\n              <li key={r.imdbID}>\n                {r.Title} ({r.Year}) \n                <button \n                  type=\"button\" \n                  // disabled={false}\n                  disabled={disableButton(r)}\n                  onClick={() => nominateMovie(r)}\n                >\n                  Nominate\n                </button>\n              </li>\n            )}\n          </ul>\n        </div>\n\n        <div className=\"card\">\n          <p>Nominees List\"</p>\n          <ul>\n            {nominationList.map(n =>\n              <li key={n.imdbID}>\n                {n.Title} ({n.Year}) \n                <button\n                  type=\"button\"\n                  onClick={() => removeMovie(n)}\n                >\n                  Remove\n                </button>\n              </li>\n            )}\n          </ul>\n        </div>\n\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"flex\">\n        <h1>\n          The Shoppies\n      </h1>\n\n        <div className=\"card\">\n          <p>Movie Title</p>\n          <form>\n            <input type=\"text\" value={query} onChange={search}></input>\n          </form>\n        </div>\n\n        <div className=\"card\">\n          <p>Results for \"{query}\"</p>\n        </div>\n\n      </div>\n    )\n  }\n  \n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}